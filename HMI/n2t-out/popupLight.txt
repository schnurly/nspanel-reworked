Page popupLight
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Locked                              : no
        Swide up page ID                    : disabled
        Swide down page ID                  : disabled
        Swide left page ID                  : disabled
        Swide right page ID                 : disabled
    
    Events
        Preinitialize Event
            for(sys0=0;sys0<40;sys0++)
            {
                b[sys0].bco=defaultBcoColor
                b[sys0].pco=defaultFontColor
                if(b[sys0].type==53&&defaultBcoColor==0)
                {
                    b[sys0].pic=10
                    b[sys0].pic2=11
                }
            }
            if(defaultBcoColor==0)
            {
                hBrightness.pic=14
                hBrightness.pic1=13
                hBrightness.pic2=15
                hTempSlider.pic=16
                hTempSlider.pic1=17
                hTempSlider.pic2=15
            }
            dim=dimValueNormal
            //get entitiy name
            tEntity.txt=pageIcons.tTmp1.txt
            //get entity id
            entn.txt=pageIcons.tTmp2.txt
            vis p0,0
            vis tSend,0
            vis tTmp,0
            vis tInstruction,0
            vis tId,0
            //page open event
            // event,pageOpenDetail,typeOfPage,tEntityName
            // craft command
            tSend.txt="event,pageOpenDetail,popupLight,"+entn.txt
            //send calc crc
            btlen tSend.txt,sys0
            crcrest 1,0xffff // reset CRC
            crcputh 55 bb
            crcputs sys0,2
            crcputs tSend.txt,0
            //send cmd
            printh 55 bb
            prints sys0,2
            prints tSend.txt,0
            prints crcval,2
            //disable brightness by default
            vis t1,0
            vis t2,0
            vis hBrightness,0
            //disable color temp by default
            vis t4,0
            vis t3,0
            vis hTempSlider,0
            //disable color wheel components by default
            vis bColor,0
            vis t0,0
            vis pColorWheel,0
            //vis t0,0
        
Variable (string) strCommand
    Attributes
        Scope         : local
        Text          : 
        Max. Text Size: 500
    
Variable (string) entn
    Attributes
        Scope         : local
        Text          : 
        Max. Text Size: 80
    
Variable (int32) mode
    Attributes
        Scope: local
        Value: 1
    
Variable (int32) mode_temp
    Attributes
        Scope: local
        Value: 0
    
Text tEntity
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : tEntity1
        Max. Text Size                      : 25
    
Text tIcon1
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : î´
        Max. Text Size                      : 10
    
Text t1
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : Brightness
        Max. Text Size                      : 50
    
Text t2
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : î
        Max. Text Size                      : 10
    
Text t3
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : î
        Max. Text Size                      : 10
    
Text t4
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : Temperature
        Max. Text Size                      : 50
    
Text tSend
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : newtxt
        Max. Text Size                      : 100
    
Text tTmp
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : 
        Max. Text Size                      : 80
    
Text tInstruction
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : 
        Max. Text Size                      : 20
    
Text tId
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : 
        Max. Text Size                      : 20
    
Text t0
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Associated Keyboard                 : none
        Text                                : Color
        Max. Text Size                      : 50
    
Picture p0
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
    
Picture pColorWheel
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
    
    Events
        Touch Press Event
            //craft command
            tSend.txt="event,buttonPress2,"+entn.txt+",colorWheel,"
            sys0=tch0
            sys0=sys0-pColorWheel.x
            covx sys0,tTmp.txt,0,0
            tSend.txt+=tTmp.txt
            tSend.txt+="|"
            sys0=tch1
            sys0=sys0-pColorWheel.y
            covx sys0,tTmp.txt,0,0
            tSend.txt+=tTmp.txt
            tSend.txt+="|"
            covx pColorWheel.h,tTmp.txt,0,0
            tSend.txt+=tTmp.txt
            //send calc crc
            btlen tSend.txt,sys0
            crcrest 1,0xffff // reset CRC
            crcputh 55 bb
            crcputs sys0,2
            crcputs tSend.txt,0
            //send cmd
            printh 55 bb
            prints sys0,2
            prints tSend.txt,0
            prints crcval,2
        
Slider hBrightness
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Position                            : 50
        Upper range limit                   : 100
        Lower range limit                   : 0
    
    Events
        Touch Release Event
            tmCooldown.en=1
            tmCooldown.tim=2500
            //craft command
            tSend.txt="event,buttonPress2,"+entn.txt+",brightnessSlider,"
            covx hBrightness.val,tTmp.txt,0,0
            tSend.txt+=tTmp.txt
            //send calc crc
            btlen tSend.txt,sys0
            crcrest 1,0xffff // reset CRC
            crcputh 55 bb
            crcputs sys0,2
            crcputs tSend.txt,0
            //send cmd
            printh 55 bb
            prints sys0,2
            prints tSend.txt,0
            prints crcval,2
        
Slider hTempSlider
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        Position                            : 50
        Upper range limit                   : 100
        Lower range limit                   : 0
    
    Events
        Touch Release Event
            tmCooldown.en=1
            tmCooldown.tim=2500
            //craft command
            tSend.txt="event,buttonPress2,"+entn.txt+",colorTempSlider,"
            covx hTempSlider.val,tTmp.txt,0,0
            tSend.txt+=tTmp.txt
            //send calc crc
            btlen tSend.txt,sys0
            crcrest 1,0xffff // reset CRC
            crcputh 55 bb
            crcputs sys0,2
            crcputs tSend.txt,0
            //send cmd
            printh 55 bb
            prints sys0,2
            prints tSend.txt,0
            prints crcval,2
        
Button b0
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        State                               : unpressed
        Text                                : î
        Max. Text Size                      : 10
    
    Events
        Touch Press Event
            tSend.txt="event,buttonPress2,popupLight,bExit"
            //send calc crc
            btlen tSend.txt,sys0
            crcrest 1,0xffff // reset CRC
            crcputh 55 bb
            crcputs sys0,2
            crcputs tSend.txt,0
            //send cmd
            printh 55 bb
            prints sys0,2
            prints tSend.txt,0
            prints crcval,2
        
Button bColor
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        State                               : unpressed
        Text                                : î
        Max. Text Size                      : 10
    
    Events
        Touch Press Event
            if(mode.val==1)
            {
                mode.val=0
                //enable color wheel
                vis pColorWheel,1
                //disable color temp
                vis t4,0
                vis t3,0
                vis hTempSlider,0
            }else
            {
                mode.val=1
                //disable color wheel
                vis pColorWheel,0
                if(mode_temp.val==1)
                {
                    //enable color temp
                    vis t4,1
                    vis t3,1
                    vis hTempSlider,1
                }
            }
        
Dual-state Button btOnOff1
    Attributes
        Scope                               : local
        Dragging                            : 0
        Disable release event after dragging: 0
        Send Component ID                   : disabled
        State                               : unpressed
        Text                                : 
        Max. Text Size                      : 10
    
    Events
        Touch Press Event
            //craft command
            tSend.txt="event,buttonPress2,"+entn.txt+","+"OnOff,"
            covx btOnOff1.val,tTmp.txt,0,0
            tSend.txt+=tTmp.txt
            //send calc crc
            btlen tSend.txt,sys0
            crcrest 1,0xffff // reset CRC
            crcputh 55 bb
            crcputs sys0,2
            crcputs tSend.txt,0
            //send cmd
            printh 55 bb
            prints sys0,2
            prints tSend.txt,0
            prints crcval,2
        
Timer tmSleep
    Attributes
        Scope      : local
        Period (ms): 1000
        Enabled    : yes
    
    Events
        Timer Event
            if(sleepTimeout!=0)
            {
                sleepValue+=1
                if(sleepTimeout<=sleepValue)
                {
                    sleepValue=0
                    click b0,1
                    click b0,0
                }
            }
        
Timer tmSerial
    Attributes
        Scope      : local
        Period (ms): 50
        Enabled    : yes
    
    Events
        Timer Event
            // data available
            if(usize>1)
            {
                bufferPos=0
                while(bufferPos<usize)
                {
                    // check for 0x55 0xBB - Command Init Secuence
                    if(u[bufferPos]==187&&u[bufferPos-1]==85)
                    {
                        //remove garbage at the start of the buffer if there's any to free buffer for command
                        if(u[bufferPos]!=1)
                        {
                            udelete bufferPos-1
                        }
                        //instruction is now aligned with buffer, because we deleted garbage before instrcution
                        //get length after init sequence (check if there are more than to bytes in buffer)
                        if(3<usize)
                        {
                            // check if serial buffer has reached the announced length
                            ucopy payloadLength,2,2,0
                            // we are only checking payload length so we have to skip first 3 bytes (init+payload length) (-1 because of < instead of <=)
                            payloadLength+=3
                            // payload length does also not contain crc, so we are adding another 2 bytes for crc
                            payloadLength+=2
                            if(payloadLength<usize)
                            {
                                // calculate crc
                                crcrest 1,0xFFFF
                                // u[2] contains payload legth at 3rd pos in buffer, we are calculating crc from 3rd pos with number of bytes from payload length
                                //crcputu 3,u[2]
                                // u[2] cotnains payload length, we are calculating a crc over the whole message, so we have to add 3 to the length from u[2]
                                crcputu 0,payloadLength-1
                                // get recived crc to be able to compare it
                                ucopy recvCrc,payloadLength-1,2,0
                                // compare crc with recived value
                                if(crcval==recvCrc)
                                {
                                    // crc is okay
                                    // here is the location where acual code should be
                                    // write command to variable strCommand
                                    ucopy strCommand.txt,4,payloadLength-5,0
                                    // write instruction to tInstuction (debug output, but used as variable here, ui elements will be disabled by default)
                                    spstr strCommand.txt,tInstruction.txt,"~",0
                                    spstr strCommand.txt,tTmp.txt,"~",1
                                    if(tInstruction.txt=="entityUpdateDetail"&&entn.txt==tTmp.txt)
                                    {
                                        // change icon
                                        spstr strCommand.txt,tIcon1.txt,"~",2
                                        vis tIcon1,1
                                        // change icon color
                                        spstr strCommand.txt,tTmp.txt,"~",3
                                        covx tTmp.txt,sys0,0,0
                                        tIcon1.pco=sys0
                                        // get Button State
                                        spstr strCommand.txt,tTmp.txt,"~",4
                                        covx tTmp.txt,sys0,0,0
                                        btOnOff1.val=sys0
                                        // get Brightness value
                                        spstr strCommand.txt,tTmp.txt,"~",5
                                        if(tTmp.txt=="disable")
                                        {
                                            vis t1,0
                                            vis t2,0
                                            vis hBrightness,0
                                        }else
                                        {
                                            vis t1,1
                                            vis t2,1
                                            vis hBrightness,1
                                            covx tTmp.txt,sys0,0,0
                                            if(tmCooldown.en==0)
                                            {
                                                hBrightness.val=sys0
                                            }
                                        }
                                        // get ColorTemp value
                                        spstr strCommand.txt,tTmp.txt,"~",6
                                        if(tTmp.txt=="disable")
                                        {
                                            vis hTempSlider,0
                                            vis t3,0
                                            vis t4,0
                                            mode_temp.val=0
                                            // mode == 1 is temp controls currently shown
                                            if(mode.val==1)
                                            {
                                                // switch mode
                                                click bColor,1
                                                click bColor,0
                                            }
                                        }else if(tTmp.txt=="unknown") // temp supported, but not in color mode
                                        {
                                            mode_temp.val=1
                                            // mode == 1 is temp controls currently shown
                                            if(mode.val==1)
                                            {
                                                // switch mode
                                                click bColor,1
                                                click bColor,0
                                            }
                                        }else
                                        {
                                            mode_temp.val=1
                                            vis hTempSlider,1
                                            vis t3,1
                                            vis t4,1
                                            if(tmCooldown.en==0)
                                            {
                                                covx tTmp.txt,sys0,0,0
                                                hTempSlider.val=sys0
                                            }
                                            // mode == 0 is rgb controls currently shown
                                            if(mode.val==0)
                                            {
                                                // switch mode
                                                click bColor,1
                                                click bColor,0
                                            }
                                        }
                                        // get Color value
                                        spstr strCommand.txt,tTmp.txt,"~",7
                                        // disable -> isn't supported
                                        if(tTmp.txt=="disable")
                                        {
                                            vis t0,0
                                            vis bColor,0
                                            vis pColorWheel,0
                                        }else
                                        {
                                            vis t0,1
                                            //only enable bColor button if color temp is also supported
                                            if(mode_temp.val==1)
                                            {
                                                vis bColor,1
                                            }
                                            if(mode.val==0)
                                            {
                                                vis pColorWheel,1
                                            }
                                        }
                                        // set t0 Color (Localization)
                                        spstr strCommand.txt,t0.txt,"~",8
                                        // set t4 Temperature (Localization)
                                        spstr strCommand.txt,t4.txt,"~",9
                                        // set t1 Brightness (Localization)
                                        spstr strCommand.txt,t1.txt,"~",10
                                    }
                                    if(tInstruction.txt=="time")
                                    {
                                        // get set time to global variable
                                        spstr strCommand.txt,pageIcons.vaTime.txt,"~",1
                                    }
                                    if(tInstruction.txt=="date")
                                    {
                                        // get set date to global variable
                                        spstr strCommand.txt,pageIcons.vaDate.txt,"~",1
                                    }
                                    if(tInstruction.txt=="dimmode")
                                    {
                                        // get value
                                        spstr strCommand.txt,tTmp.txt,"~",1
                                        covx tTmp.txt,dimValue,0,0
                                        // get value normal
                                        spstr strCommand.txt,tTmp.txt,"~",2
                                        covx tTmp.txt,dimValueNormal,0,0
                                        dim=dimValueNormal
                                        // get background color
                                        spstr strCommand.txt,tTmp.txt,"~",3
                                        if(tTmp.txt!="")
                                        {
                                            covx tTmp.txt,defaultBcoColor,0,0
                                        }
                                        // get font color
                                        spstr strCommand.txt,tTmp.txt,"~",4
                                        if(tTmp.txt!="")
                                        {
                                            covx tTmp.txt,defaultFontColor,0,0
                                        }
                                    }
                                    if(tInstruction.txt=="timeout")
                                    {
                                        //set timeout to global var
                                        spstr strCommand.txt,tTmp.txt,"~",1
                                        covx tTmp.txt,sleepTimeout,0,0
                                    }
                                    if(tInstruction.txt=="pageType")
                                    {
                                        //command format pageType,specialPageName
                                        //write name of speical page to tId
                                        spstr strCommand.txt,tId.txt,"~",1
                                        //save second arg if there's one
                                        spstr strCommand.txt,tTmp.txt,"~",2
                                        //save third arg if there's one
                                        spstr strCommand.txt,pageIcons.tTmp2.txt,"~",3
                                        //we are going to exit this page with this command, so we have to clear the buffer, so we are not getting into a stupid loop ...
                                        udelete payloadLength-1
                                        bufferPos=0
                                        if(tId.txt=="pageStartup")
                                        {
                                            page pageStartup
                                        }
                                        if(tId.txt=="screensaver")
                                        {
                                            page screensaver
                                        }
                                        if(tId.txt=="cardEntities")
                                        {
                                            page cardEntities
                                        }
                                        if(tId.txt=="cardGrid")
                                        {
                                            page cardGrid
                                        }
                                        if(tId.txt=="popupLight")
                                        {
                                            pageIcons.tTmp1.txt=tTmp.txt
                                            page popupLight
                                        }
                                        if(tId.txt=="popupShutter")
                                        {
                                            pageIcons.tTmp1.txt=tTmp.txt
                                            page popupShutter
                                        }
                                        if(tId.txt=="popupNotify")
                                        {
                                            page popupNotify
                                        }
                                        if(tId.txt=="cardThermo")
                                        {
                                            page cardThermo
                                        }
                                        if(tId.txt=="cardMedia")
                                        {
                                            page cardMedia
                                        }
                                        if(tId.txt=="cardAlarm")
                                        {
                                            page cardAlarm
                                        }
                                        if(tId.txt=="cardQR")
                                        {
                                            page cardQR
                                        }
                                    }
                                    // end of user code
                                    udelete payloadLength-1
                                    bufferPos=0
                                }
                            }
                        }
                    }
                    // next character
                    bufferPos++
                }
            }
        
Timer tmCooldown
    Attributes
        Scope      : local
        Period (ms): 100
        Enabled    : no
    
    Events
        Timer Event
            tmCooldown.en=0
        
TouchCap tc0
    Attributes
        Scope: local
        Value: 0
    
    Events
        Touch Press Event
            sleepValue=0
        
